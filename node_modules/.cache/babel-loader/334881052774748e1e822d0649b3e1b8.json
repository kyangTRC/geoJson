{"remainingRequest":"/Users/keyang/Downloads/ThreeGeoJSON-master/node_modules/thread-loader/dist/cjs.js!/Users/keyang/Downloads/ThreeGeoJSON-master/node_modules/babel-loader/lib/index.js!/Users/keyang/Downloads/ThreeGeoJSON-master/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/keyang/Downloads/ThreeGeoJSON-master/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/keyang/Downloads/ThreeGeoJSON-master/src/components/JsonToGeojsonForm.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/keyang/Downloads/ThreeGeoJSON-master/src/components/JsonToGeojsonForm.vue","mtime":1565668594389},{"path":"/Users/keyang/Downloads/ThreeGeoJSON-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/keyang/Downloads/ThreeGeoJSON-master/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/keyang/Downloads/ThreeGeoJSON-master/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/keyang/Downloads/ThreeGeoJSON-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/keyang/Downloads/ThreeGeoJSON-master/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport ArcgisToGeojsonUtils from '@esri/arcgis-to-geojson-utils';\nexport default {\n  name: 'JsonToGeojsonForm',\n  props: ['placeholder'],\n  data: function data() {\n    return {\n      inputJson: '',\n      resultJson: '',\n      prettyPrint: true,\n      showWgs84Alert: false,\n      originalCopyText: 'Copy',\n      copyText: 'Copy'\n    };\n  },\n  computed: {\n    showResultArea: function showResultArea() {\n      return this.resultJson !== '';\n    },\n    resultJsonString: function resultJsonString() {\n      return JSON.stringify(this.resultJson, null, this.prettyPrint ? 2 : undefined);\n    }\n  },\n  methods: {\n    convert: function convert() {\n      var inputJson = false;\n\n      try {\n        inputJson = JSON.parse(this.inputJson);\n      } catch (e) {\n        this.resultJson = 'Invalid JSON. Please check using jsonlint.com.';\n      }\n\n      if (inputJson) {\n        try {\n          this.showWgs84Alert = false;\n\n          if (inputJson.hasOwnProperty('spatialReference') && inputJson.spatialReference.hasOwnProperty('wkid') && inputJson.spatialReference.wkid !== 4326) {\n            this.showWgs84Alert = true;\n          } // if this is an object, assume FeatureSet. If array, assume array of features.\n\n\n          var features = inputJson;\n\n          if (!Array.isArray(inputJson)) {\n            features = inputJson.features;\n          }\n\n          var geoJsonFeatures = features.map(function (feature, i) {\n            var f = ArcgisToGeojsonUtils.arcgisToGeoJSON(feature);\n            f.id = i;\n            return f;\n          });\n          var featureCollection = {\n            type: 'FeatureCollection',\n            features: geoJsonFeatures\n          };\n          this.resultJson = featureCollection;\n          this.$emit('geojson', featureCollection);\n        } catch (e) {\n          this.resultJson = 'Invalid input.';\n        }\n      }\n    },\n    onCopy: function onCopy() {\n      var _this = this;\n\n      this.copyText = 'Copied';\n      setTimeout(function () {\n        _this.copyText = _this.originalCopyText;\n      }, 2000);\n    },\n    onError: function onError() {\n      this.copyText = 'Can not copy';\n    }\n  }\n};",{"version":3,"sources":["JsonToGeojsonForm.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoCA,OAAA,oBAAA,MAAA,+BAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,mBADA;AAEA,EAAA,KAAA,EAAA,CAAA,aAAA,CAFA;AAGA,EAAA,IAAA,EAAA,gBAAA;AACA,WAAA;AACA,MAAA,SAAA,EAAA,EADA;AAEA,MAAA,UAAA,EAAA,EAFA;AAGA,MAAA,WAAA,EAAA,IAHA;AAIA,MAAA,cAAA,EAAA,KAJA;AAKA,MAAA,gBAAA,EAAA,MALA;AAMA,MAAA,QAAA,EAAA;AANA,KAAA;AAQA,GAZA;AAaA,EAAA,QAAA,EAAA;AACA,IAAA,cAAA,EAAA,0BAAA;AACA,aAAA,KAAA,UAAA,KAAA,EAAA;AACA,KAHA;AAIA,IAAA,gBAAA,EAAA,4BAAA;AACA,aAAA,IAAA,CAAA,SAAA,CAAA,KAAA,UAAA,EAAA,IAAA,EAAA,KAAA,WAAA,GAAA,CAAA,GAAA,SAAA,CAAA;AACA;AANA,GAbA;AAqBA,EAAA,OAAA,EAAA;AACA,IAAA,OAAA,EAAA,mBAAA;AACA,UAAA,SAAA,GAAA,KAAA;;AACA,UAAA;AACA,QAAA,SAAA,GAAA,IAAA,CAAA,KAAA,CAAA,KAAA,SAAA,CAAA;AACA,OAFA,CAEA,OAAA,CAAA,EAAA;AACA,aAAA,UAAA,GAAA,gDAAA;AACA;;AAEA,UAAA,SAAA,EAAA;AACA,YAAA;AACA,eAAA,cAAA,GAAA,KAAA;;AACA,cAAA,SAAA,CAAA,cAAA,CAAA,kBAAA,KAAA,SAAA,CAAA,gBAAA,CAAA,cAAA,CAAA,MAAA,CAAA,IAAA,SAAA,CAAA,gBAAA,CAAA,IAAA,KAAA,IAAA,EAAA;AACA,iBAAA,cAAA,GAAA,IAAA;AACA,WAJA,CAKA;;;AACA,cAAA,QAAA,GAAA,SAAA;;AACA,cAAA,CAAA,KAAA,CAAA,OAAA,CAAA,SAAA,CAAA,EAAA;AACA,YAAA,QAAA,GAAA,SAAA,CAAA,QAAA;AACA;;AACA,cAAA,eAAA,GAAA,QAAA,CAAA,GAAA,CAAA,UAAA,OAAA,EAAA,CAAA,EAAA;AACA,gBAAA,CAAA,GAAA,oBAAA,CAAA,eAAA,CAAA,OAAA,CAAA;AACA,YAAA,CAAA,CAAA,EAAA,GAAA,CAAA;AACA,mBAAA,CAAA;AACA,WAJA,CAAA;AAMA,cAAA,iBAAA,GAAA;AACA,YAAA,IAAA,EAAA,mBADA;AAEA,YAAA,QAAA,EAAA;AAFA,WAAA;AAKA,eAAA,UAAA,GAAA,iBAAA;AACA,eAAA,KAAA,CAAA,SAAA,EAAA,iBAAA;AACA,SAvBA,CAuBA,OAAA,CAAA,EAAA;AACA,eAAA,UAAA,GAAA,gBAAA;AACA;AACA;AACA,KArCA;AAsCA,IAAA,MAtCA,oBAsCA;AAAA;;AACA,WAAA,QAAA,GAAA,QAAA;AACA,MAAA,UAAA,CAAA,YAAA;AACA,QAAA,KAAA,CAAA,QAAA,GAAA,KAAA,CAAA,gBAAA;AACA,OAFA,EAEA,IAFA,CAAA;AAGA,KA3CA;AA4CA,IAAA,OA5CA,qBA4CA;AACA,WAAA,QAAA,GAAA,cAAA;AACA;AA9CA;AArBA,CAAA","sourcesContent":["<template>\n  <form>\n    <div class=\"form-group\">\n      <textarea rows=\"10\" class=\"form-control\" v-bind:placeholder=\"placeholder\" v-model=\"inputJson\"></textarea>\n    </div>\n\n    <div class=\"form-group float-right\">\n      <button type=\"button\" class=\"btn btn-primary\" v-on:click.prevent=\"convert()\">Convert</button>\n    </div>\n\n    <div class=\"form-row align-items-center\" v-if=\"showWgs84Alert\">\n      <div class=\"col\">\n        <div class=\"alert alert-warning\" role=\"alert\">\n          It looks like your FeatureSet has features with geometries with spatial references not in Latitude/Longitude (WGS84). In general, GeoJSON only works with WGS84, which is why the map probably looks wrong, so you probably want to change your input data to have that spatial reference. Try setting the \"Output Sptaial Reference\" to 4326.\n        </div>\n      </div>\n    </div>\n\n    <div class=\"form-group\">\n      <textarea rows=\"10\" class=\"form-control\" v-show=\"showResultArea\" v-model=\"resultJsonString\"></textarea>\n    </div>\n\n    <div class=\"form-row\" v-show=\"showResultArea\">\n      <div class=\"col d-flex align-items-center justify-content-between\">\n        <label class=\"m-0\" v-show=\"showResultArea\">Pretty Print <input type=\"checkbox\" v-model=\"prettyPrint\" /></label>\n        <button type=\"button\" class=\"btn btn-primary\"\n          v-clipboard:copy=\"resultJsonString\"\n          v-clipboard:success=\"onCopy\"\n          v-clipboard:error=\"onError\">{{ copyText }}</button>\n      </div>\n    </div>\n\n  </form>\n</template>\n\n<script>\nimport ArcgisToGeojsonUtils from '@esri/arcgis-to-geojson-utils';\n\nexport default {\n  name: 'JsonToGeojsonForm',\n  props: ['placeholder'],\n  data: () => {\n    return {\n      inputJson: '',\n      resultJson: '',\n      prettyPrint: true,\n      showWgs84Alert: false,\n      originalCopyText: 'Copy',\n      copyText: 'Copy',\n    };\n  },\n  computed: {\n    showResultArea: function() {\n      return this.resultJson !== '';\n    },\n    resultJsonString: function() {\n      return JSON.stringify(this.resultJson, null, (this.prettyPrint ? 2 : undefined));\n    },\n  },\n  methods: {\n    convert: function() {\n      let inputJson = false;\n      try {\n        inputJson = JSON.parse(this.inputJson);\n      } catch (e) {\n        this.resultJson = 'Invalid JSON. Please check using jsonlint.com.';\n      }\n\n      if(inputJson) {\n        try {\n          this.showWgs84Alert = false;\n          if(inputJson.hasOwnProperty('spatialReference') && inputJson.spatialReference.hasOwnProperty('wkid') && inputJson.spatialReference.wkid !==4326) {\n            this.showWgs84Alert = true;\n          }\n          // if this is an object, assume FeatureSet. If array, assume array of features.\n          let features = inputJson;\n          if(!Array.isArray(inputJson)) {\n            features = inputJson.features;\n          }\n          const geoJsonFeatures = features.map((feature, i) => {\n            let f = ArcgisToGeojsonUtils.arcgisToGeoJSON(feature);\n            f.id = i;\n            return f;\n          });\n  \n          let featureCollection = {\n            type: 'FeatureCollection',\n            features: geoJsonFeatures\n          }\n  \n          this.resultJson = featureCollection;\n          this.$emit('geojson', featureCollection);\n        } catch (e) {\n          this.resultJson = 'Invalid input.';\n        }\n      }\n    },\n    onCopy() {\n      this.copyText = 'Copied';\n      setTimeout(() => {\n        this.copyText = this.originalCopyText;\n      }, 2000)\n    },\n    onError() {\n      this.copyText = 'Can not copy';\n    },\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n  textarea {\n    font-family: 'Roboto Mono', monospace;\n  }\n</style>"],"sourceRoot":"src/components"}]}