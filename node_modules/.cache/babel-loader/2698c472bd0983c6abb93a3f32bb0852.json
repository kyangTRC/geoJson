{"remainingRequest":"/Users/keyang/Downloads/ThreeGeoJSON-master/node_modules/thread-loader/dist/cjs.js!/Users/keyang/Downloads/ThreeGeoJSON-master/node_modules/babel-loader/lib/index.js!/Users/keyang/Downloads/ThreeGeoJSON-master/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/keyang/Downloads/ThreeGeoJSON-master/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/keyang/Downloads/ThreeGeoJSON-master/src/components/LeafletMap.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/keyang/Downloads/ThreeGeoJSON-master/src/components/LeafletMap.vue","mtime":1558008146000},{"path":"/Users/keyang/Downloads/ThreeGeoJSON-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/keyang/Downloads/ThreeGeoJSON-master/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/keyang/Downloads/ThreeGeoJSON-master/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/keyang/Downloads/ThreeGeoJSON-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/keyang/Downloads/ThreeGeoJSON-master/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\nimport L from 'leaflet';\nimport * as esri from 'esri-leaflet';\nL.esri = esri; // BUG https://github.com/Leaflet/Leaflet/issues/4968#issuecomment-319569682\n\nimport iconRetinaUrl from 'leaflet/dist/images/marker-icon-2x.png';\nimport iconUrl from 'leaflet/dist/images/marker-icon.png';\nimport shadowUrl from 'leaflet/dist/images/marker-shadow.png';\nL.Marker.prototype.options.icon = L.icon({\n  iconRetinaUrl: iconRetinaUrl,\n  iconUrl: iconUrl,\n  shadowUrl: shadowUrl,\n  iconSize: [25, 41],\n  iconAnchor: [12, 41],\n  popupAnchor: [1, -34],\n  tooltipAnchor: [16, -28],\n  shadowSize: [41, 41]\n});\nexport default {\n  name: 'LeafletMap',\n  data: function data() {\n    return {};\n  },\n  components: {},\n  props: {\n    options: {\n      type: Object,\n      default: function _default() {\n        return {};\n      }\n    },\n    minZoom: {\n      type: Number,\n      default: undefined\n    },\n    maxZoom: {\n      type: Number,\n      default: undefined\n    },\n    center: {\n      type: Array,\n      default: function _default() {\n        return [-122, 38];\n      }\n    },\n    zoom: {\n      type: Number,\n      default: 8\n    },\n    // basemap: {\n    //   type: String,\n    //   required: true,\n    //   default: 'streets',\n    // },\n    geojson: {\n      // type: Object,\n      default: function _default() {\n        return {};\n      }\n    }\n  },\n  watch: {\n    geojson: {\n      handler: function handler(newVal) {\n        if (this.layer) {\n          this.mapObject.removeLayer(this.layer);\n        }\n\n        this.addGeoJSONData(newVal);\n      },\n      deep: true\n    }\n  },\n  mounted: function mounted() {\n    var options = this.options;\n    Object.assign(options, {\n      minZoom: this.minZoom,\n      maxZoom: this.maxZoom\n    });\n\n    if (this.center != null) {\n      options.center = this.center;\n    }\n\n    if (this.zoom != null) {\n      options.zoom = this.zoom;\n    }\n\n    this.mapObject = L.map(this.$el, options);\n    L.esri.basemapLayer('Topographic').addTo(this.mapObject);\n  },\n  methods: {\n    addGeoJSONData: function addGeoJSONData(geojsonData) {\n      // cannot figure out what event to use here instead of setTimeout:\n      setTimeout(function () {\n        this.mapObject.fitBounds(this.layer.getBounds());\n      }.bind(this), 800);\n      this.layer = L.geoJSON(geojsonData, {\n        onEachFeature: function onEachFeature(feature, layer) {\n          var popupString = '';\n\n          for (var key in feature.properties) {\n            popupString = \"\".concat(popupString, \"<strong>\").concat(key, \"</strong>: \").concat(feature.properties[key], \"<br />\");\n          }\n\n          layer.bindPopup(popupString);\n        }\n      });\n      this.layer.addTo(this.mapObject);\n    }\n  }\n};",{"version":3,"sources":["LeafletMap.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"component\"></div>\n</template>\n\n<script>\nimport L from 'leaflet';\nimport * as esri from 'esri-leaflet';\nL.esri = esri;\n\n// BUG https://github.com/Leaflet/Leaflet/issues/4968#issuecomment-319569682\nimport iconRetinaUrl from 'leaflet/dist/images/marker-icon-2x.png'\nimport iconUrl from 'leaflet/dist/images/marker-icon.png'\nimport shadowUrl from 'leaflet/dist/images/marker-shadow.png'\nL.Marker.prototype.options.icon = L.icon({\n  iconRetinaUrl,\n  iconUrl,\n  shadowUrl,\n  iconSize: [25, 41],\n  iconAnchor: [12, 41],\n  popupAnchor: [1, -34],\n  tooltipAnchor: [16, -28],\n  shadowSize: [41, 41]\n})\n\nexport default {\n  name: 'LeafletMap',\n  data() {\n    return {};\n  },\n  components: {\n  },\n  props: {\n    options: {\n      type: Object,\n      default: () => ({}),\n    },\n    minZoom: {\n      type: Number,\n      default: undefined,\n    },\n    maxZoom: {\n      type: Number,\n      default: undefined,\n    },\n    center: {\n      type: Array,\n      default: function() {\n        return [-122, 38];\n      },\n    },\n    zoom: {\n      type: Number,\n      default: 8,\n    },\n    // basemap: {\n    //   type: String,\n    //   required: true,\n    //   default: 'streets',\n    // },\n\n    geojson: {\n      // type: Object,\n      default: () => ({})\n    }\n  },\n\n  watch: {\n    geojson: {\n      handler(newVal) {\n        if(this.layer) {\n          this.mapObject.removeLayer(this.layer);\n        }\n        this.addGeoJSONData(newVal);\n      },\n      deep: true,\n    },\n  },\n\n\n  mounted() {\n    const options = this.options;\n    Object.assign(options, {\n      minZoom: this.minZoom,\n      maxZoom: this.maxZoom,\n    });\n    if (this.center != null) {\n      options.center = this.center;\n    }\n    if (this.zoom != null) {\n      options.zoom = this.zoom;\n    }\n\n    this.mapObject = L.map(this.$el, options);\n\n    L.esri.basemapLayer('Topographic').addTo(this.mapObject);\n  },\n  methods: {\n    addGeoJSONData(geojsonData) {\n      // cannot figure out what event to use here instead of setTimeout:\n      setTimeout(function() {\n        this.mapObject.fitBounds(this.layer.getBounds());\n      }.bind(this), 800);\n      \n      this.layer = L.geoJSON(geojsonData, {\n        onEachFeature: function (feature, layer) {\n          let popupString = '';\n          for(let key in feature.properties) {\n            popupString = `${popupString}<strong>${key}</strong>: ${feature.properties[key]}<br />`;\n          }\n          layer.bindPopup(popupString);\n        }\n      });\n      this.layer.addTo(this.mapObject);\n    }\n  }\n};\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n  @import \"~leaflet/dist/leaflet.css\";\n\n  .component {\n    background-color: gray;\n    height: 100%;\n    min-height: 300px;\n  }\n</style>"],"sourceRoot":"src/components"}]}