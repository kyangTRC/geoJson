{"remainingRequest":"/Users/keyang/Downloads/ThreeGeoJSON-master/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/keyang/Downloads/ThreeGeoJSON-master/src/components/LeafletMap.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/keyang/Downloads/ThreeGeoJSON-master/src/components/LeafletMap.vue","mtime":1558008146000},{"path":"/Users/keyang/Downloads/ThreeGeoJSON-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/keyang/Downloads/ThreeGeoJSON-master/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/keyang/Downloads/ThreeGeoJSON-master/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/keyang/Downloads/ThreeGeoJSON-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/keyang/Downloads/ThreeGeoJSON-master/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n\nimport L from 'leaflet';\nimport * as esri from 'esri-leaflet';\nL.esri = esri;\n\n// BUG https://github.com/Leaflet/Leaflet/issues/4968#issuecomment-319569682\nimport iconRetinaUrl from 'leaflet/dist/images/marker-icon-2x.png'\nimport iconUrl from 'leaflet/dist/images/marker-icon.png'\nimport shadowUrl from 'leaflet/dist/images/marker-shadow.png'\nL.Marker.prototype.options.icon = L.icon({\n  iconRetinaUrl,\n  iconUrl,\n  shadowUrl,\n  iconSize: [25, 41],\n  iconAnchor: [12, 41],\n  popupAnchor: [1, -34],\n  tooltipAnchor: [16, -28],\n  shadowSize: [41, 41]\n})\n\nexport default {\n  name: 'LeafletMap',\n  data() {\n    return {};\n  },\n  components: {\n  },\n  props: {\n    options: {\n      type: Object,\n      default: () => ({}),\n    },\n    minZoom: {\n      type: Number,\n      default: undefined,\n    },\n    maxZoom: {\n      type: Number,\n      default: undefined,\n    },\n    center: {\n      type: Array,\n      default: function() {\n        return [-122, 38];\n      },\n    },\n    zoom: {\n      type: Number,\n      default: 8,\n    },\n    // basemap: {\n    //   type: String,\n    //   required: true,\n    //   default: 'streets',\n    // },\n\n    geojson: {\n      // type: Object,\n      default: () => ({})\n    }\n  },\n\n  watch: {\n    geojson: {\n      handler(newVal) {\n        if(this.layer) {\n          this.mapObject.removeLayer(this.layer);\n        }\n        this.addGeoJSONData(newVal);\n      },\n      deep: true,\n    },\n  },\n\n\n  mounted() {\n    const options = this.options;\n    Object.assign(options, {\n      minZoom: this.minZoom,\n      maxZoom: this.maxZoom,\n    });\n    if (this.center != null) {\n      options.center = this.center;\n    }\n    if (this.zoom != null) {\n      options.zoom = this.zoom;\n    }\n\n    this.mapObject = L.map(this.$el, options);\n\n    L.esri.basemapLayer('Topographic').addTo(this.mapObject);\n  },\n  methods: {\n    addGeoJSONData(geojsonData) {\n      // cannot figure out what event to use here instead of setTimeout:\n      setTimeout(function() {\n        this.mapObject.fitBounds(this.layer.getBounds());\n      }.bind(this), 800);\n      \n      this.layer = L.geoJSON(geojsonData, {\n        onEachFeature: function (feature, layer) {\n          let popupString = '';\n          for(let key in feature.properties) {\n            popupString = `${popupString}<strong>${key}</strong>: ${feature.properties[key]}<br />`;\n          }\n          layer.bindPopup(popupString);\n        }\n      });\n      this.layer.addTo(this.mapObject);\n    }\n  }\n};\n",{"version":3,"sources":["LeafletMap.vue"],"names":[],"mappings":";;;;;AAKA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"LeafletMap.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"component\"></div>\n</template>\n\n<script>\nimport L from 'leaflet';\nimport * as esri from 'esri-leaflet';\nL.esri = esri;\n\n// BUG https://github.com/Leaflet/Leaflet/issues/4968#issuecomment-319569682\nimport iconRetinaUrl from 'leaflet/dist/images/marker-icon-2x.png'\nimport iconUrl from 'leaflet/dist/images/marker-icon.png'\nimport shadowUrl from 'leaflet/dist/images/marker-shadow.png'\nL.Marker.prototype.options.icon = L.icon({\n  iconRetinaUrl,\n  iconUrl,\n  shadowUrl,\n  iconSize: [25, 41],\n  iconAnchor: [12, 41],\n  popupAnchor: [1, -34],\n  tooltipAnchor: [16, -28],\n  shadowSize: [41, 41]\n})\n\nexport default {\n  name: 'LeafletMap',\n  data() {\n    return {};\n  },\n  components: {\n  },\n  props: {\n    options: {\n      type: Object,\n      default: () => ({}),\n    },\n    minZoom: {\n      type: Number,\n      default: undefined,\n    },\n    maxZoom: {\n      type: Number,\n      default: undefined,\n    },\n    center: {\n      type: Array,\n      default: function() {\n        return [-122, 38];\n      },\n    },\n    zoom: {\n      type: Number,\n      default: 8,\n    },\n    // basemap: {\n    //   type: String,\n    //   required: true,\n    //   default: 'streets',\n    // },\n\n    geojson: {\n      // type: Object,\n      default: () => ({})\n    }\n  },\n\n  watch: {\n    geojson: {\n      handler(newVal) {\n        if(this.layer) {\n          this.mapObject.removeLayer(this.layer);\n        }\n        this.addGeoJSONData(newVal);\n      },\n      deep: true,\n    },\n  },\n\n\n  mounted() {\n    const options = this.options;\n    Object.assign(options, {\n      minZoom: this.minZoom,\n      maxZoom: this.maxZoom,\n    });\n    if (this.center != null) {\n      options.center = this.center;\n    }\n    if (this.zoom != null) {\n      options.zoom = this.zoom;\n    }\n\n    this.mapObject = L.map(this.$el, options);\n\n    L.esri.basemapLayer('Topographic').addTo(this.mapObject);\n  },\n  methods: {\n    addGeoJSONData(geojsonData) {\n      // cannot figure out what event to use here instead of setTimeout:\n      setTimeout(function() {\n        this.mapObject.fitBounds(this.layer.getBounds());\n      }.bind(this), 800);\n      \n      this.layer = L.geoJSON(geojsonData, {\n        onEachFeature: function (feature, layer) {\n          let popupString = '';\n          for(let key in feature.properties) {\n            popupString = `${popupString}<strong>${key}</strong>: ${feature.properties[key]}<br />`;\n          }\n          layer.bindPopup(popupString);\n        }\n      });\n      this.layer.addTo(this.mapObject);\n    }\n  }\n};\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n  @import \"~leaflet/dist/leaflet.css\";\n\n  .component {\n    background-color: gray;\n    height: 100%;\n    min-height: 300px;\n  }\n</style>"]}]}